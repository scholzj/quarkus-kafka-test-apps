apiVersion: kafka.strimzi.io/v1beta2
kind: KafkaTopic
metadata:
  name: kafka-test-apps
  labels:
    strimzi.io/cluster: my-cluster
spec:
  partitions: 3
  replicas: 3
  config:
    retention.bytes: 1073741824
    retention.ms: 86400000
    segment.bytes: 1073741824
---

apiVersion: kafka.strimzi.io/v1beta2
kind: KafkaTopic
metadata:
  name: kafka-test-apps-reversed
  labels:
    strimzi.io/cluster: my-cluster
spec:
  partitions: 3
  replicas: 3
  config:
    retention.bytes: 1073741824
    retention.ms: 86400000
    segment.bytes: 1073741824
---

apiVersion: kafka.strimzi.io/v1beta2
kind: KafkaUser
metadata:
  name: kafka-test-apps-producer
  labels:
    strimzi.io/cluster: my-cluster
spec:
  authentication:
    type: scram-sha-512
  authorization:
    type: simple
    acls:
    - resource:
        type: topic
        name: kafka-test-apps
      operation: Write
    - resource:
        type: topic
        name: kafka-test-apps
      operation: Create
    - resource:
        type: topic
        name: kafka-test-apps
      operation: Describe
---

apiVersion: kafka.strimzi.io/v1beta2
kind: KafkaUser
metadata:
  name: kafka-test-apps-streams
  labels:
    strimzi.io/cluster: my-cluster
spec:
  authentication:
    type: scram-sha-512
  authorization:
    type: simple
    acls:
      - resource:
          type: topic
          name: kafka-test-apps-reversed
        operation: Write
      - resource:
          type: topic
          name: kafka-test-apps-reversed
        operation: Create
      - resource:
          type: topic
          name: kafka-test-apps-reversed
        operation: Describe
      - resource:
          type: topic
          name: kafka-test-apps
        operation: Read
      - resource:
          type: topic
          name: kafka-test-apps
        operation: Describe
      - resource:
          type: group
          name: my-kafka-streams
        operation: Read
---

apiVersion: kafka.strimzi.io/v1beta2
kind: KafkaUser
metadata:
  name: kafka-test-apps-consumer
  labels:
    strimzi.io/cluster: my-cluster
spec:
  authentication:
    type: scram-sha-512
  authorization:
    type: simple
    acls:
    - resource:
        type: topic
        name: kafka-test-apps-reversed
      operation: Read
    - resource:
        type: topic
        name: kafka-test-apps-reversed
      operation: Describe
    - resource:
        type: group
        name: my-kafka-consumer
      operation: Read
---

apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: kafka-producer
  name: kafka-producer
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kafka-producer
  template:
    metadata:
      labels:
        app: kafka-producer
    spec:
      containers:
        - name: kafka-producer
          image: quay.io/scholzj/quarkus-kafka-producer:latest
          env:
            - name: MP_MESSAGING_OUTGOING_PRODUCED_SECURITY_PROTOCOL
              value: SASL_SSL
            - name: MP_MESSAGING_OUTGOING_PRODUCED_SSL_TRUSTSTORE_TYPE
              value: PKCS12
            - name: MP_MESSAGING_OUTGOING_PRODUCED_SSL_TRUSTSTORE_LOCATION
              value: /etc/truststore/ca.p12
            - name: MP_MESSAGING_OUTGOING_PRODUCED_SSL_TRUSTSTORE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: my-cluster-cluster-ca-cert
                  key: ca.password
            - name: MP_MESSAGING_OUTGOING_PRODUCED_BOOTSTRAP_SERVERS
              value: my-cluster-kafka-bootstrap:9093
            - name: MP_MESSAGING_OUTGOING_PRODUCED_TOPIC
              value: kafka-test-apps
            - name: USERNAME
              value: "kafka-test-apps-producer"
            - name: PASSWORD
              valueFrom:
                secretKeyRef:
                  name: kafka-test-apps-producer
                  key: password
          volumeMounts:
            - name: truststore
              mountPath: "/etc/truststore"
              readOnly: true
      volumes:
        - name: truststore
          secret:
            secretName: my-cluster-cluster-ca-cert
            items:
              - key: ca.p12
                path: ca.p12
---

apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: kafka-streams
  name: kafka-streams
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kafka-streams
  template:
    metadata:
      labels:
        app: kafka-streams
    spec:
      containers:
        - name: kafka-streams
          image: quay.io/scholzj/quarkus-kafka-streams:latest
          env:
            - name: QUARKUS_KAFKA_STREAMS_SECURITY_PROTOCOL
              value: SASL_SSL
            - name: QUARKUS_KAFKA_STREAMS_SSL_TRUSTSTORE_TYPE
              value: PKCS12
            - name: QUARKUS_KAFKA_STREAMS_SSL_TRUSTSTORE_LOCATION
              value: /etc/truststore/ca.p12
            - name: QUARKUS_KAFKA_STREAMS_SSL_TRUSTSTORE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: my-cluster-cluster-ca-cert
                  key: ca.password
            - name: USERNAME
              value: "kafka-test-apps-streams"
            - name: PASSWORD
              valueFrom:
                secretKeyRef:
                  name: kafka-test-apps-streams
                  key: password
            - name: QUARKUS_KAFKA_STREAMS_BOOTSTRAP_SERVERS
              value: my-cluster-kafka-bootstrap:9093
            - name: QUARKUS_KAFKA_STREAMS_APPLICATION_ID
              value: my-kafka-streams
          volumeMounts:
            - name: truststore
              mountPath: "/etc/truststore"
              readOnly: true
      volumes:
        - name: truststore
          secret:
            secretName: my-cluster-cluster-ca-cert
            items:
              - key: ca.p12
                path: ca.p12
---

apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: kafka-consumer
  name: kafka-consumer
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kafka-consumer
  template:
    metadata:
      labels:
        app: kafka-consumer
    spec:
      containers:
        - name: kafka-consumer
          image: quay.io/scholzj/quarkus-kafka-consumer:latest
          env:
            - name: MP_MESSAGING_INCOMING_CONSUMED_SECURITY_PROTOCOL
              value: SASL_SSL
            - name: MP_MESSAGING_INCOMING_CONSUMED_SSL_TRUSTSTORE_TYPE
              value: PKCS12
            - name: MP_MESSAGING_INCOMING_CONSUMED_SSL_TRUSTSTORE_LOCATION
              value: /etc/truststore/ca.p12
            - name: MP_MESSAGING_INCOMING_CONSUMED_SSL_TRUSTSTORE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: my-cluster-cluster-ca-cert
                  key: ca.password
            - name: MP_MESSAGING_INCOMING_CONSUMED_BOOTSTRAP_SERVERS
              value: my-cluster-kafka-bootstrap:9093
            - name: MP_MESSAGING_INCOMING_CONSUMED_TOPIC
              value: kafka-test-apps
            - name: MP_MESSAGING_INCOMING_CONSUMED_GROUP_ID
              value: my-kafka-consumer
            - name: USERNAME
              value: "kafka-test-apps-consumer"
            - name: PASSWORD
              valueFrom:
                secretKeyRef:
                  name: kafka-test-apps-consumer
                  key: password
          volumeMounts:
            - name: truststore
              mountPath: "/etc/truststore"
              readOnly: true
      volumes:
        - name: truststore
          secret:
            secretName: my-cluster-cluster-ca-cert
            items:
              - key: ca.p12
                path: ca.p12
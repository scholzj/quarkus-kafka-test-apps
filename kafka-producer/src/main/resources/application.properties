quarkus.ssl.native=true

# Quarkus logging configuration
quarkus.log.file.enable=false
quarkus.log.console.enable=true
quarkus.log.console.format=%d{yyyy-MM-dd HH:mm:ss,SSS} %-5p [%c{3.}] (%t) %s%e%n
quarkus.log.console.level=INFO
quarkus.log.console.color=false

# Vert.x configs
vertx.disableFileCaching=true

# Configure the Kafka sink (we write to it)
mp.messaging.outgoing.produced.connector=smallrye-kafka
mp.messaging.outgoing.produced.topic=kafka-test-apps
mp.messaging.outgoing.produced.bootstrap.servers=client-api-1ibw2gm8h8wldimcrtri0kb3sy8.apps.demo-cluster-ms.y3w4.s1.devshift.org:443
mp.messaging.outgoing.produced.security.protocol=SASL_SSL
mp.messaging.outgoing.produced.sasl.mechanism=OAUTHBEARER
mp.messaging.outgoing.produced.sasl.jaas.config=org.apache.kafka.common.security.oauthbearer.OAuthBearerLoginModule required;
mp.messaging.outgoing.produced.sasl.login.callback.handler.class=io.strimzi.kafka.oauth.client.JaasClientOauthLoginCallbackHandler
mp.messaging.outgoing.produced.ssl.truststore.type=PKCS12
mp.messaging.outgoing.produced.ssl.truststore.location=/Users/scholzj/development/quarkus-kafka-test-apps/kafka.p12
mp.messaging.outgoing.produced.ssl.truststore.password=RiiQ6cQwqwIE
mp.messaging.outgoing.produced.ssl.endpoint.identification.algorithm=HTTPS
mp.messaging.outgoing.produced.key.serializer=org.apache.kafka.common.serialization.StringSerializer
mp.messaging.outgoing.produced.value.serializer=org.apache.kafka.common.serialization.StringSerializer
mp.messaging.outgoing.produced.acks=1
mp.messaging.outgoing.produced.partitioner.class=org.apache.kafka.clients.producer.internals.DefaultPartitioner
